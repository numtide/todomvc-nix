#!/usr/bin/env bash

bootstrap_nix() {
  local nar_serve_url=https://nar-serve.numtide.com
  local nix_bin_hash=sha256-VAlt8RP9js9pWOMmaJ/WX+sWp7nTk+15qsmfTIl54Ug=
  local nix_store=$PWD/.direnv/nix-store
  local store_path=/nix/store/bvbmqrghmr966xkw49p6ahx85a9qblx8-nix-3.0pre20201021_ecfebde-x86_64-unknown-linux-musl

  # Override the store path
  export NIX_CONFIG="store = $nix_store"

  # Fetch a static Nix binary.
  nix_bin=$(fetchurl "${nar_serve_url}${store_path}/bin/nix" "$nix_bin_hash")

  # Only to fetch nix again, but from the cache.
  (
    # Use the default config
    unset HOME
    export NIX_CONF_DIR=/dev/null
    exec -a nix-store "$nix_bin" \
      --realize "$store_path" \
      --add-root "$PWD/.direnv/nix-out" --indirect >/dev/null
  )

  # Add the nix binaries from the store to the PATH
  PATH_add "${nix_store}${store_path}/bin"
}

# TODO: check if it's Linux and x86_64
if [[ "$HOSTTYPE-$OSTYPE" == "x86_64-linux-gnu" ]]; then
  bootstrap_nix
elif ! type nix &>/dev/null; then
  echo "Please install Nix."
  exit 1
fi

# Set project-specific configuration
export NIX_USER_CONF_FILES=$PWD/nix/nix.conf

# TODO: fix this
# use_nix
