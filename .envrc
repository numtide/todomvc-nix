#!/usr/bin/env bash

bootstrap_nix() {
  local nix_bin store_path

  # Fetch a static Nix binary
  nix_bin=$(fetchurl \
    "https://nar-serve.numtide.com/nix/store/bvbmqrghmr966xkw49p6ahx85a9qblx8-nix-3.0pre20201021_ecfebde-x86_64-unknown-linux-musl/bin/nix" \
    "sha256-VAlt8RP9js9pWOMmaJ/WX+sWp7nTk+15qsmfTIl54Ug=")
  mkdir -p .direnv/bin
  PATH_add .direnv/bin

  # Create a wrapper for the binary
  rm -f .direnv/bin/nix
  cat <<WRAPPER > .direnv/bin/nix
#!/usr/bin/env bash
set -euo pipefail
exec -a "\$0" "$nix_bin" --store "$PWD/.direnv/nix-store" "\$@"
WRAPPER
  chmod +x .direnv/bin/nix
  # Also for nix-store
  ln -sf "$PWD/.direnv/bin/nix" "$PWD/.direnv/bin/nix-store"
  # Find out the store path of Nix
  store_path=$(HOME=/nothing NIX_CONF_DIR=/nothing nix --option experimental-features nix-command show-config | grep "^build-hook =.*" | cut -d ' ' -f 3)
  # Restore the rest of Nix using Nix from the public cache
  # TODO: make sure that cache.nixos.org is in the substituters
  nix-store --realize --add-root "$PWD/.direnv/nix-lib" --indirect "$store_path"
  NIX_DATA_DIR=$PWD/.direnv/nix-store/$(readlink "$PWD/.direnv/nix-lib")/share
  export NIX_DATA_DIR
}

# TODO: check if it's Linux and x86_64
if [[ "$HOSTTYPE-$OSTYPE" == "x86_64-linux-gnu" ]]; then
  bootstrap_nix
elif ! type nix &>/dev/null; then
  echo "Please install Nix."
  exit 1
fi

#export NIX_CONFIG="substituters = https://numtide.cachix.org/"

export NIX_USER_CONF_FILES=$PWD/nix/nix.conf

# TODO: fix this
# use_nix
